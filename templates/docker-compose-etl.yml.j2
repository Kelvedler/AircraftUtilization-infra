version: "3.8"
services:
  {{ docker_etl_name }}:
    image: "{{ docker_image_etl }}:{{ docker_image_tag_etl }}"
    environment:
      - PYTHONPATH={{ etl_pythonpath }}
      - S3_REGION={{ etl_s3_region }}
      - S3_ROLE_ARN={{ etl_s3_role_arn }}
      - S3_BUCKET={{ etl_s3_bucket }}
      - S3_PROFILE_ARN={{ etl_s3_profile_arn }}
      - S3_TRUST_ANCHOR_ARN={{ etl_s3_trust_anchor_arn }}
      - S3_CERTIFICATE_PATH={{ etl_cert_path }}/{{ etl_s3_certificate }}
      - S3_PRIVATE_KEY_PATH={{ etl_cert_path }}/{{ etl_s3_private_key }}
      - S3_SERVICE_NAME=rolesanywhere
      - MONGODB_HOST={{ mongo_service }}
      - MONGODB_PORT={{ mongo_port }}
      - MONGODB_USERNAME={{ mongo_user }}
      - MONGODB_PASSWORD={{ mongo_pass }}
      - AIRFLOW_HOME={{ etl_airflow_home }}
      - AIRFLOW__CORE__DAGS_FOLDER={{ etl_airflow_core_dags_folder }}
      - AIRFLOW__CORE__EXECUTOR={{ etl_airflow_core_executor }}
      - AIRFLOW__CORE__LOAD_EXAMPLES={{ etl_airflow_core_load_examples }}
      - AIRFLOW__CORE__PLUGINS_FOLDER={{ etl_airflow_core_plugins_folder }}
      - AIRFLOW__CORE__FERNET_KEY={{ etl_secret_key }}
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://{{ postgres_user }}:{{ postgres_pass }}@{{ postgres_service }}:{{ postgres_port }}/{{ postgres_name }}
      - AIRFLOW__LOGGING__BASE_LOG_FOLDER={{ etl_airflow_base_log_folder }}
      - AIRFLOW__LOGGING_LOGGING_LEVEL={{ etl_log_level }}
      - AIRFLOW__LOGGING__DAG_PROCESSOR_MANAGER_LOG_LOCATION={{ etl_dag_processor_manager_log_location }}
      - AIRFLOW__WEBSERVER__CONFIG_FILE={{ etl_airflow_webserver_config_file }}
      - AIRFLOW__WEBSERVER__SECRET_KEY={{ etl_secret_key }}
      - AIRFLOW__WEBSERVER__WEB_SERVER_PORT={{ etl_airflow_webserver_port }}
      - AIRFLOW__SCHEDULER__CHILD_PROCESS_LOG_DIRECTORY={{ etl_airflow_scheduler_child_process_log_directory }}
      - AIRFLOW__CELERY__BROKER_URL=redis://{{ redis_service }}:{{ redis_port }}
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://{{ postgres_user }}:{{ postgres_pass }}@{{ postgres_service }}:{{ postgres_port }}/{{ postgres_name }}
      - WEBSERVER_STORAGE_URI=redis://{{ redis_service }}:{{ redis_port }}
    volumes:
      - {{ project_path }}/{{ etl_log_volume_dir }}:{{ etl_airflow_base_log_folder }}
      - {{ project_path }}/{{ etl_cert_volume_dir }}:{{ etl_cert_path }}
    restart: unless-stopped
    networks:
      - {{ traefik_network_name }}
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network={{ traefik_network_name }}"

      # Http router 'airflow-server'
      - "traefik.http.routers.{{ env }}-{{ project_name }}-airflow-server.entrypoints=websecure"
      - "traefik.http.routers.{{ env }}-{{ project_name }}-airflow-server.rule=Host(`{{ domain_record_airflow_server }}`)"
      - "traefik.http.routers.{{ env }}-{{ project_name }}-airflow-server.service={{ env }}-{{ project_name }}-airflow-server"
      - "traefik.http.routers.{{ env }}-{{ project_name }}-airflow-server.tls=true"
      - "traefik.http.routers.{{ env }}-{{ project_name }}-airflow-server.tls.certresolver=LE"

      # Service 'airflow-server'
      - "traefik.http.services.{{ env }}-{{ project_name }}-airflow-server.loadbalancer.server.port={{ etl_airflow_webserver_port }}"
      - "traefik.http.services.{{ env }}-{{ project_name }}-airflow-server.loadbalancer.server.scheme=http"

networks:
  {{ traefik_network_name }}:
    external: true
