services:
  {{ docker_backend_name }}:
    image: "{{ docker_image_backend }}:{{ docker_image_tag }}"
    environment:
      - MONGODB_URL=mongodb://{{ mongo_user }}:{{ mongo_pass }}@{{ mongo_service }}:{{ mongo_port }}
      - MONGODB_DB={{ mongo_name }}
      - POSTGRES_URL=postgresql://{{ postgres_user }}:{{ postgres_pass }}@{{ postgres_service }}:{{ postgres_port }}/{{ postgres_name }}
      - CONTACT_EMAIL={{ contact_email }}
      - LOGGING_DEFAULT={{ backend_log_level }}
      - LOGGING_SYSTEM={{ backend_system_log_level }}
      - HOST=0.0.0.0
      - PORT={{ backend_port }}
    expose:
      - "{{ backend_port }}"
    restart: unless-stopped
    networks:
      - {{ traefik_network_name }}
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network={{ traefik_network_name }}"

      # Http router 'backend'
      - "traefik.http.routers.{{ env }}-{{ project_name }}-backend.entrypoints=websecure"
      - "traefik.http.routers.{{ env }}-{{ project_name }}-backend.rule=Host(`{{ domain_record_backend }}`)"
      - "traefik.http.routers.{{ env }}-{{ project_name }}-backend.service={{ env }}-{{ project_name }}-backend"
      - "traefik.http.routers.{{ env }}-{{ project_name }}-backend.tls=true"
      - "traefik.http.routers.{{ env }}-{{ project_name }}-backend.tls.certresolver=LE"

      # Service 'backend'
      - "traefik.http.services.{{ env }}-{{ project_name }}-backend.loadbalancer.server.port={{ backend_port }}"
      - "traefik.http.services.{{ env }}-{{ project_name }}-backend.loadbalancer.server.scheme=http"

networks:
  {{ traefik_network_name }}:
    external: true
